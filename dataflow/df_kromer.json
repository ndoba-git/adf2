{
	"name": "df_kromer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DSkromercsv",
						"type": "DatasetReference"
					},
					"name": "sales"
				},
				{
					"dataset": {
						"referenceName": "DSkromercsv",
						"type": "DatasetReference"
					},
					"name": "salesNew"
				},
				{
					"dataset": {
						"referenceName": "DSkromercsv",
						"type": "DatasetReference"
					},
					"name": "salesUpdate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Kromer_Out",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Unionsales"
				},
				{
					"name": "UnionUpdates"
				},
				{
					"name": "NotNull"
				},
				{
					"name": "SurrogateKey"
				},
				{
					"name": "Distinct"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				}
			],
			"script": "source(output(\n\t\tID as string,\n\t\tTitle as string,\n\t\tCost as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['Sales.txt']) ~> sales\nsource(output(\n\t\tID as string,\n\t\tTitle as string,\n\t\tCost as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['SalesNew.txt']) ~> salesNew\nsource(output(\n\t\tID as string,\n\t\tTitle as string,\n\t\tCost as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['SalesUpdate.txt']) ~> salesUpdate\nsales, salesNew union(byName: true)~> Unionsales\nUnionsales, salesUpdate union(byName: true)~> UnionUpdates\nUnionUpdates filter(!isNull(Title)) ~> NotNull\nNotNull keyGenerate(output(myKey as long),\n\tstartAt: 1L) ~> SurrogateKey\nSurrogateKey aggregate(groupBy(ID),\n\twinner = last(myKey)) ~> Distinct\nSurrogateKey select(mapColumn(\n\t\tID,\n\t\tTitle,\n\t\tCost,\n\t\tmyKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDistinct, Select1 join(winner == myKey,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['salesUpdate.csv'],\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tID = Select1@ID,\n\t\tTitle,\n\t\tCost\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}