{
	"name": "DimEmployeeLoader2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "Employees1",
					"description": " Source employees file, changes every day"
				},
				{
					"dataset": {
						"referenceName": "Oeprod",
						"type": "DatasetReference"
					},
					"name": "DimEmployees",
					"description": "Current rows in DimEmployees DW table"
				}
			],
			"sinks": [
				{
					"name": "sinkNew",
					"description": " "
				},
				{
					"name": "sinkUpdates",
					"description": " "
				},
				{
					"name": "sinkInactive",
					"description": " Age out old rows"
				}
			],
			"transformations": [
				{
					"name": "TypeConversions"
				},
				{
					"name": "TypeConversionsAndSetAttrs"
				},
				{
					"name": "LookupIDs"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "checkForChanges"
				},
				{
					"name": "SetAttrsForNew"
				},
				{
					"name": "SetAttrsInactive",
					"description": "make iscurrent 0"
				},
				{
					"name": "SetAttrsUpdate"
				},
				{
					"name": "NormNames"
				},
				{
					"name": "InactiveFields"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "NullFilter",
					"description": "Filter out NULLs from source file"
				},
				{
					"name": "NameNorm2"
				}
			],
			"script": "source(output(\n\t\tEmpID as short,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as string,\n\t\tEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true) ~> Employees1\nsource(output(\n\t\tvrmrrn as string,\n\t\tvrmtrl as string,\n\t\tvrmpcn as string,\n\t\tvrmins as string,\n\t\tvrmdub as string,\n\t\tvrmdtc as timestamp,\n\t\tvrmusc as string,\n\t\tvrmdtm as timestamp,\n\t\tvrmusm as string,\n\t\tdosnum as integer,\n\t\tvrmtit as string,\n\t\tvrmlg1 as string,\n\t\tvrmlg2 as string,\n\t\tvrmlg3 as string,\n\t\tvrmdts as timestamp,\n\t\tvrmdtu as timestamp,\n\t\tvrmcntbew as integer,\n\t\tvrmcntsis as integer,\n\t\tvrmcntbcs as integer,\n\t\tvrmcntmf as integer,\n\t\tvrmcntprak as integer,\n\t\tvrmcnteudac as integer,\n\t\tvrmrefdos as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimEmployees\nDimEmployees derive(EmpID = toInteger(EmpID)) ~> TypeConversions\nNullFilter derive(EmpID = toInteger(EmpID),\n\t\tStartDate = toDate(StartDate,'MM/dd/yyyy'),\n\t\tEndDate = toDate(EndDate,'MM/dd/yyyy'),\n\t\tprocesstime = currentTimestamp()) ~> TypeConversionsAndSetAttrs\nTypeConversionsAndSetAttrs, TypeConversions lookup(TypeConversionsAndSetAttrs@EmpID == TypeConversions@EmpID,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupIDs\nNormNames split(isNull(iscurrent),\n\tdisjoint: false) ~> ConditionalSplit1@(NewRow, CheckForUpdates)\nNameNorm2, TypeConversions exists(NameNorm2@EmpID == TypeConversions@EmpID &&\r\n\r\n(\r\n\r\nNameNorm2@Region != DimEmployees@Region ||\r\nNameNorm2@Role != DimEmployees@Role ||\r\nNameNorm2@Level != DimEmployees@Level ||\r\nNameNorm2@Status != DimEmployees@Status\r\n\r\n),\n\tnegate:false,\n\tbroadcast: 'auto')~> checkForChanges\nConditionalSplit1@NewRow derive(iscurrent = 1,\n\t\tsurrogatekey = toString(crc32(EmpID,EmpFunction))) ~> SetAttrsForNew\ncheckForChanges derive(iscurrent = 0) ~> SetAttrsInactive\ncheckForChanges derive(iscurrent = 1) ~> SetAttrsUpdate\nLookupIDs select(mapColumn(\n\t\tEmpID = TypeConversionsAndSetAttrs@EmpID,\n\t\tRegion,\n\t\tStatus,\n\t\tLevel,\n\t\tRole,\n\t\tStartDate,\n\t\tEndDate,\n\t\tEmpFunction = Function,\n\t\tiscurrent = isCurrent,\n\t\tprocesstime,\n\t\tsurrogatekey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> NormNames\nSetAttrsInactive select(mapColumn(\n\t\tEmpID,\n\t\tStatus,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InactiveFields\nInactiveFields alterRow(updateIf(true())) ~> AlterRow1\nEmployees1 filter(!isNull(EmpID)) ~> NullFilter\nConditionalSplit1@CheckForUpdates select(mapColumn(\n\t\tEmpID,\n\t\tRegion,\n\t\tStatus,\n\t\tLevel,\n\t\tRole,\n\t\tStartDate,\n\t\tEndDate,\n\t\tEmpFunction,\n\t\tiscurrent,\n\t\tprocesstime,\n\t\tsurrogatekey\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> NameNorm2\nSetAttrsForNew sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('roundRobin', 4)) ~> sinkNew\nSetAttrsUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('roundRobin', 4)) ~> sinkUpdates\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tEmpID,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t),\n\tpartitionBy('roundRobin', 4)) ~> sinkInactive"
		}
	}
}